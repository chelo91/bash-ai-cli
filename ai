#!/bin/bash

# Configuration
CONFIG_FILE="$HOME/Scripts/.config"

# Verify configuration file
if [[ ! -f "$CONFIG_FILE" ]]; then
    echo "Error: Configuration file not found at $CONFIG_FILE." >&2
    exit 1
fi

# Load configurations
source "$CONFIG_FILE"

if [[ -z "$API_KEY" ]]; then
    echo "Error: API_KEY variable not defined in configuration file." >&2
    exit 1
fi

if [[ -z "$PROMPT" ]]; then
    echo "Error: PROMPT variable not defined in configuration file." >&2
    exit 1
fi

if [[ -z "$API_URL" ]]; then
    echo "Error: API_URL variable not defined in configuration file." >&2
    exit 1
fi

if [[ -z "$MODEL" ]]; then
    echo "Error: MODEL variable not defined in configuration file." >&2
    exit 1
fi

# Capture input from pipe or arguments
if ! [[ -t 0 ]]; then
    MESSAGE=$(cat)
fi

# If there are arguments, add them correctly (with space if MESSAGE already has content)
[[ -n "$1" ]] && MESSAGE="${MESSAGE:+$MESSAGE }$*"

# Escape the message for JSON safely
MESSAGE=$(jq -R -s '.' <<< "$MESSAGE")

# Validate message
if [[ -z "$MESSAGE" ]]; then
    echo "Usage: $0 <message>" >&2
    exit 1
fi

# Make API request
RESPONSE=$(curl -s -X POST "$API_URL" \
    -H "Authorization: Bearer $API_KEY" \
    -H "Content-Type: application/json" \
    -d @- << EOF
{
    "model": "$MODEL",
    "messages": [
        { "role": "system", "content": "$PROMPT" },
        { "role": "user", "content": ${MESSAGE} }
    ]
}
EOF
) || {
    echo "Error: API connection failed." >&2
    exit 1
}

# Extract and display the response
FINAL_RESPONSE=$(jq -r '.choices[0].message.content' <<< "$RESPONSE")

if [[ -z "$FINAL_RESPONSE" || "$FINAL_RESPONSE" == "null" ]]; then
    echo "Error: Invalid API response." >&2
    echo "Complete API response:" >&2
    echo "$RESPONSE" | jq '.' >&2
    exit 1
fi

echo "$FINAL_RESPONSE"
